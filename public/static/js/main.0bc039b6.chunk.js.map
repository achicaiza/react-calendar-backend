{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRouter.js","router/PrivateRouter.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endPoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","events","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","console","log","a","response","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","moment","nowPlus1","clone","add","initEvent","notes","start","toDate","end","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","formValues","setFormValues","titleValid","setTitleValid","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","resp","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRouter","isAuthenticated","Component","component","rest","props","to","PrivateRouter","AppRouter","checking","exact","path","rootReducer","combineReducers","action","map","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bc039b6.chunk.js","sourcesContent":["import {useState} from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n};\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\nconst fetchSinToken = (endPoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endPoint}`;\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n};\r\nexport const fetchWithToken = (endPoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endPoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n};\r\nexport {\r\n    fetchSinToken\r\n}\r\n","export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n};\r\n","import Swal from \"sweetalert2\";\r\nimport {types} from \"../types/types\";\r\nimport {fetchWithToken} from \"../helpers/fetch\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const {uid, name} = getState().auth;\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport const eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdated = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUt');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n};\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n            const events = body.events;\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});\r\n","import {fetchSinToken, fetchWithToken} from \"../helpers/fetch\";\r\nimport {types} from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport {eventLogout} from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const response = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await response.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({uid: body.uid, name: body.name}));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    };\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const response = await fetchSinToken('auth/new', {name, email, password}, 'POST');\r\n        const body = await response.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({uid: body.uid, name: body.name}));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    };\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const response = await fetchWithToken('auth/renew');\r\n        const body = await response.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({uid: body.uid, name: body.name}));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    };\r\n};\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\nconst login = (user) => ({\r\n    type: types.authStartLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    };\r\n};\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n});\r\n","import React from 'react';\r\nimport './login.css';\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {startLogin, startRegister} from \"../../actions/auth\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'santiagochicaiza@yahoo.es',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Nando',\r\n        rEmail: 'nando@yahoo.es',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        console.log(e);\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {startLogout} from \"../../actions/auth\";\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth);\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    };\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n            <button className=\"btn btn-outline-danger\">\r\n                <span className=\"fa fa-sign-out-alt\" onClick={handleLogout}> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} = event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n};\r\n","import {types} from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Modal from 'react-modal'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {uiCloseModal} from \"../../actions/ui\";\r\nimport {eventClearActiveEvent, eventStartAddNew, eventStartUpdated, eventUpdated} from \"../../actions/events\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\nconst now = moment();\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n};\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    };\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio.', 'error');\r\n        }\r\n        if (title.trim().length < 2) {\r\n            setTitleValid(false);\r\n        }\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdated(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    };\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            /*            onAfterOpen={afterOpenModal}*/\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {activeEvent ? 'Editar Evento' : 'Nuevo evento'} </h1>\r\n            <hr/>\r\n            <form className=\"container\" onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        name=\"dateStart\"\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        name=\"dateEnd\"\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"/>\r\n                </div>\r\n\r\n                <hr/>\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n        <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n        ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {uiOpenModal} from \"../../actions/ui\";\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal());\r\n    };\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {eventStartDelete} from \"../../actions/events\";\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    };\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Navbar} from \"../ui/Navbar\";\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport {messages} from \"../../helpers/calendar-messages-es\";\r\nimport {CalendarEvent} from \"./CalendarEvent\";\r\nimport {CalendarModal} from \"./CalendarModal\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {uiOpenModal} from \"../../actions/ui\";\r\nimport {eventClearActiveEvent, eventSetActive, eventStartLoading} from \"../../actions/events\";\r\nimport {AddNewFab} from \"../ui/AddNewFab\";\r\nimport {DeleteEventFab} from \"../ui/DeleteEventFab\";\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    };\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    };\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    };\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#455660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        };\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    };\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{event: CalendarEvent}}\r\n            />\r\n            <AddNewFab/>\r\n            {\r\n                activeEvent && <DeleteEventFab/>\r\n            }\r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nexport const PublicRouter = ({isAuthenticated, component: Component, ...rest}) => {\r\n    return (\r\n        <Route {...rest}\r\n               component={(props) => (\r\n                   (isAuthenticated)\r\n                       ? (<Redirect to=\"/\"/>) :\r\n                       (<Component {...props}/>)\r\n               )}\r\n        />\r\n    )\r\n};\r\n\r\nPublicRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nexport const PrivateRouter = ({isAuthenticated, component: Component, ...rest}) => {\r\n    return (\r\n        <Route {...rest}\r\n               component={(props) => (\r\n                   (isAuthenticated)\r\n                       ? <Component {...props}/> :\r\n                       (<Redirect to=\"/login\"/>))}/>\r\n    )\r\n};\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {BrowserRouter as Router, Redirect, Switch} from \"react-router-dom\";\r\nimport {LoginScreen} from \"../components/auth/LoginScreen\";\r\nimport {CalendarScreen} from \"../components/calendar/CalendarScreen\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {startChecking} from \"../actions/auth\";\r\nimport {PublicRouter} from \"./PublicRouter\";\r\nimport {PrivateRouter} from \"./PrivateRouter\";\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return (<h5>Espere ...</h5>);\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRouter exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid}/>\r\n                    <PrivateRouter exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid}/>\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n\r\n};\r\n","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(e => e.id === action.payload.id ? action.payload : e)\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(e => e.id !== state.activeEvent.id),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authStartLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport {uiReducer} from \"./uiReducer\";\r\nimport {calendarReducer} from \"./calendarReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport {rootReducer} from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n        }) : compose;\r\n\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","import React from 'react';\r\nimport {AppRouter} from \"./router/AppRouter\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CalendarApp} from \"./CalendarApp\";\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}